{"version":3,"file":"static/webpack/static/development/pages/index.js.e9d9fed7d2ec27214b85.hot-update.js","sources":["webpack:///./components/ConverterForm.js"],"sourcesContent":["import React, { Component } from 'react';\n// import Currency from '../api/Currency'\nvar axios = require(\"axios\");\n\nimport AutocompleteWrapper from './AutoCompleteWrapper'\nimport StepConvertor from './StepConvertor'\n\nclass ConverterForm extends Component {\n\n    state = {\n        convertFrom: '',\n        convertTo: '',\n        apiResponse: ''\n    }\n\n    apiDataCall = async () => {\n        return await axios.get('/convert/AUD/USD')\n\n    }\n\n    requestConversion = async () => {\n        let { convertFrom, convertTo } = this.state;\n        if (convertFrom !== '' && convertTo !== '') {\n            let data = await this.apiDataCall()\n            console.log(data.data)\n            this.setState({ apiResponse: JSON.stringify(data.data) })\n        }\n\n    }\n\n    updateValue = (value, type) => {\n        switch (type) {\n            case 'from':\n                this.setState({ convertFrom: value })\n                break;\n            case 'to':\n                this.setState({ convertTo: value })\n                break;\n            default:\n                break;\n\n        }\n    }\n\n    onChange = (value, type) => {\n        this.updateValue(value, type);\n\n    }\n\n    onSelect = (value, type) => {\n        this.updateValue(value, type);\n    }\n\n\n    onSwapClick = () => {\n        let { convertFrom, convertTo } = this.state;\n        this.setState({ convertFrom: convertTo, convertTo: convertFrom })\n\n    }\n\n    render() {\n        let { convertFrom, convertTo, apiResponse } = this.state;\n        let { onChange, onSelect } = this\n        return (\n            <div>\n                <h1>\n                    Convert currencies live!\n                </h1>\n                <label>Choose a currency to convert from</label>\n                <br />\n                <AutocompleteWrapper onSelectParent={onSelect} value={convertFrom} onChange={onChange} type={'from'} />\n                <br />\n\n                <br />\n\n                <label>Choose a currency to convert to</label>\n                <br />\n                <AutocompleteWrapper onSelectParent={onSelect} value={convertTo} onChange={onChange} type={'to'} />\n                <br />\n                <br />\n\n                <button onClick={this.requestConversion}>Convert</button>\n\n                <button onClick={this.onSwapClick}>Swap</button>\n\n                <h2>Converting {convertFrom} to {convertTo}</h2>\n                {apiResponse !== '' &&\n                    <StepConvertor convertFrom={convertFrom} convertTo={convertTo} apiResponse={apiResponse} />\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default ConverterForm;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAHA;AACA;;;;;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;AAIA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AARA;AAWA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAOA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAIA;AAAA;AAAA;AAAA;AAKA;;;;AArFA;AACA;AAuFA;;;;A","sourceRoot":""}